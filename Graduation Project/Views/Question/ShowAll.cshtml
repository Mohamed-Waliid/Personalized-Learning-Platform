@model List<Graduation_Project.ViewModels.Question.QuestionDetailsViewModel>

@{
    ViewData["Title"] = "Quiz Questions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="quiz-questions-section py-5">
    <div class="container">
        <div class="mb-4 d-flex flex-column flex-md-row justify-content-between align-items-md-center">
            <div>
                <h1 class="display-5 fw-bold text-gradient">Quiz Questions</h1>
                <h4 class="text-muted">Quiz: <span class="text-primary">@ViewBag.QuizName</span></h4>
                <p class="text-muted">Manage and improve your quiz by updating existing questions or adding new ones.
                </p>
            </div>
        </div>

        <div class="q-btn-container">
            <a asp-action="Add" asp-route-quizID="@ViewBag.QuizID" class="btn btn-primary"
                style="margin-top: 5px;">
                <i class="bi bi-plus-circle me-2"></i> Add New Question
            </a>
            <a asp-action="Details" asp-controller="Course" asp-route-CourseID="@ViewBag.CourseID"
                class="btn btn-secondary" style="width: 20%;margin-top: 5px;">
                <i class="bi bi-arrow-left-circle me-2"></i> Back to Course Details
            </a>
        </div>

        @if (Model != null && Model.Any())
        {
            <hr>
            <div class="table-responsive">
                <table class="table table-bordered align-middle shadow-sm">
                    <thead style="background-color: #e9ecef;">
                        <tr>
                            <th style="width: 35%;">Question</th>
                            <th style="width: 20%;">Correct Answer</th>
                            <th style="width: 30%;">Answer Options</th>
                            <th style="width: 15%;" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var question in Model)
                        {
                            <tr>
                                <td>@question.Text</td>
                                <td><span class="text-success fw-bold fs-5">@question.CorrectAnswer</span></td>
                                <td>
                                    <ul class="mb-0 ps-3">
                                        @foreach (var option in (question.AnswerOptions ?? string.Empty).Split(','))
                                        {
                                            <li>@option.Trim()</li>
                                        }
                                    </ul>
                                </td>
                                <td class="text-center">
                                    <div class="d-flex justify-content-center gap-2 flex-wrap">
                                        <a asp-action="Edit" asp-route-QuizID="@ViewBag.QuizID"
                                            asp-route-QuestionID="@question.ID" class="btn btn-secondary"
                                            style="width: 100%; margin-bottom: 5px">
                                            <i class="bi bi-pencil-square me-1"></i> Edit
                                        </a>
                                        <button type="button" class="btn btn-danger"
                                            onclick="confirmDelete(@question.ID, @ViewBag.QuizID)"
                                            style="width: 100%">
                                            <i class="bi bi-trash me-1"></i> Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="card shadow-sm border-0">
                <div class="card-body text-center py-5">
                    <i class="bi bi-question-circle text-muted mb-4" style="font-size: 3.5rem;"></i>
                    <h3 class="h4 text-secondary mb-3">No Questions Available</h3>
                    <p class="text-muted">You haven't added any questions to this quiz yet. Click below to get started.</p>
                </div>
            </div>
        }
    </div>
</section>

@section Styles {
    <style>
        .text-gradient {
            background: linear-gradient(90deg, #4e73df 0%, #224abe 100%);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .quiz-questions-section {
            background-color: #f9fafc;
        }

        .table-striped>tbody>tr:nth-of-type(odd) {
            --bs-table-accent-bg: rgba(0, 0, 0, 0.03);
        }

        .badge {
            font-size: 0.9rem;
            padding: 0.5em 0.75em;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

    <script>
        function confirmDelete(questionId, quizId) {
            Swal.fire({
                title: 'Delete Question?',
                text: "This action cannot be undone. Are you sure you want to delete this question?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Delete',
                cancelButtonText: 'Cancel',
                focusCancel: true,
                customClass: {
                    popup: 'rounded-3',
                    confirmButton: 'btn btn-danger rounded-pill px-4 py-2',
                    cancelButton: 'btn btn-secondary rounded-pill px-4 py-2 cancel-btn'
                },
                buttonsStyling: false
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = `/Question/ConfirmDelete`;

                    const inputQuestion = document.createElement('input');
                    inputQuestion.type = 'hidden';
                    inputQuestion.name = 'QuestionID';
                    inputQuestion.value = questionId;

                    const inputQuiz = document.createElement('input');
                    inputQuiz.type = 'hidden';
                    inputQuiz.name = 'QuizID';
                    inputQuiz.value = quizId;

                    form.appendChild(inputQuestion);
                    form.appendChild(inputQuiz);
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }
    </script>
}
